{"version":3,"sources":["webpack:///src/app/pages/company/company.page.html","webpack:///src/app/pages/company/company-routing.module.ts","webpack:///src/app/pages/company/company.module.ts","webpack:///src/app/pages/company/company.page.scss","webpack:///src/app/pages/company/company.page.ts"],"names":["routes","path","component","CompanyPageRoutingModule","imports","forChild","exports","CompanyPageModule","declarations","CompanyPage","autoprovinceService","modalController","router","apiService","formBuilder","busyService","errorMessage","successMessage","working","items","provinceId","provinceName","form","group","email","compose","minLength","required","pattern","password","confirm","name","phone","ubication","categoriesid","hasDelivery","lat","lng","create","modal","onDidDismiss","then","res","data","get","setValue","dir","present","value","id","event","Get","err","AceptInfo","presentMap","presentAlert","Post","navigate","message","selector","template"],"mappings":"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","file":"pages-company-company-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"secondary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title class=\\\"ion-text-center\\\">      \\n      <p style=\\\"color: white; font-size: 16px; font-weight: bold;\\\" >CREAR CUENTA - EMPRESA</p>\\n    </ion-title>    \\n  </ion-toolbar>\\n</ion-header>\\n<ion-content  id=\\\"signup\\\" fullscreen class=\\\"backgeneral\\\" >\\n  <div class=\\\"section_two ion-padding\\\">   \\n  <ion-row class=\\\"ion-align-items-center\\\">\\n    <ion-col size=\\\"12\\\" class=\\\"ion-text-center\\\">\\n      <p style=\\\"color: yellow; font-size: 12px; font-weight: lighter;\\\" >Ingresa la siguiente Información</p>\\n    </ion-col>\\n  </ion-row>   \\n  <ion-row class=\\\"ion-align-items-center\\\">\\n    <ion-col size=\\\"12\\\">\\n      <hr style=\\\"background-color: white;\\\">\\n    </ion-col>\\n  </ion-row>  \\n  <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"tryRegister(form.value)\\\">\\n    <input type=\\\"hidden\\\" formControlName=\\\"lat\\\">\\n    <input type=\\\"hidden\\\" formControlName=\\\"lng\\\">\\n    <ion-progress-bar *ngIf=\\\"working\\\" color=\\\"secondary\\\" type=\\\"indeterminate\\\"></ion-progress-bar>\\n          <ion-item class=\\\"itemcolor1\\\">\\n            <ion-select multiple=\\\"true\\\" formControlName=\\\"name\\\"  placeholder=\\\"Selecciona la(s) Categoría(s)\\\" cancelText=\\\"Cancelar\\\" okText=\\\"Aceptar\\\"  [formControl]=\\\"form.controls.categoriesid\\\" >\\n              <ion-select-option  *ngFor=\\\"let item of items\\\" [value]=\\\"item.id\\\">{{item.name}}</ion-select-option>\\n            </ion-select>\\n          </ion-item>\\n          <ion-auto-complete  formControlName=\\\"provinceName\\\"   (itemSelected)=\\\"selectedItem($event)\\\" (ionClear)=\\\"itemRemoved($event)\\\" [dataProvider]=\\\"autoprovinceService\\\" [options]=\\\"{ placeholder : 'Escribe la Ciudad ó Pueblo' }\\\"></ion-auto-complete>\\n          <ion-item class=\\\"itemcolor1\\\">\\n            <ion-input formControlName=\\\"name\\\" type=\\\"text\\\" placeholder=\\\"Nombre de Empresa, Negocio o Servicio\\\"  required></ion-input>\\n          </ion-item>\\n\\n          <ion-item class=\\\"itemcolor1\\\">\\n            <ion-input formControlName=\\\"phone\\\"  type=\\\"text\\\" placeholder=\\\"Número de Celular\\\"  required></ion-input>\\n          </ion-item>\\n\\n          <ion-item class=\\\"itemcolor1\\\">\\n            <ion-input formControlName=\\\"ubication\\\" (click)=\\\"focus()\\\" readonly=\\\"readonly\\\"  type=\\\"text\\\" placeholder=\\\"Elegir Ubicación\\\"  required></ion-input>            \\n          </ion-item>  \\n\\n            <ion-item class=\\\"itemcolor1\\\">\\n             <ion-label>¿Cuenta con Domicilio?</ion-label>\\n              <ion-toggle   formControlName=\\\"hasDelivery\\\" ></ion-toggle>\\n            </ion-item> \\n\\n            <ion-item class=\\\"itemcolor1\\\">\\n              <ion-input formControlName=\\\"email\\\" type=\\\"text\\\" placeholder=\\\"Correo Electrónico\\\"  required></ion-input>\\n            </ion-item>\\n            <ion-item class=\\\"itemcolor1\\\">\\n              <ion-input formControlName=\\\"password\\\" type=\\\"password\\\" placeholder=\\\"Clave - Mínimo 6 caracteres\\\"  required></ion-input>\\n            </ion-item>\\n\\n            <ion-item class=\\\"itemcolor1\\\">\\n              <ion-input formControlName=\\\"confirm\\\" type=\\\"password\\\" placeholder=\\\"Confirmar Clave\\\"  required></ion-input>\\n            </ion-item>  \\n\\n          <div class=\\\"buttons ion-padding-top\\\">\\n            <ion-button expand=\\\"block\\\" color=\\\"secondary\\\"  shape=\\\"round\\\" type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\" >Guardar Información</ion-button>\\n          </div>\\n  </form>\\n</div>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CompanyPage } from './company.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CompanyPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CompanyPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CompanyPageRoutingModule } from './company-routing.module';\n\nimport { CompanyPage } from './company.page';\nimport { AutoCompleteModule } from 'ionic4-auto-complete';\n@NgModule({\n  imports: [\n    AutoCompleteModule,\n    ReactiveFormsModule,\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    CompanyPageRoutingModule\n  ],\n  declarations: [CompanyPage]\n})\nexport class CompanyPageModule {}\n","export default \"ion-select {\\n  --placeholder-opacity: 1 !important;\\n  max-width: 100% !important;\\n  width: 100% !important;\\n  padding-left: 0 !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvY29tcGFueS9DOlxcVXNlcnNcXEl2YW5jaG9cXHNvdXJjZVxccmVwb3NcXENvdGl6YVZlbmRGcm9udC9zcmNcXGFwcFxccGFnZXNcXGNvbXBhbnlcXGNvbXBhbnkucGFnZS5zY3NzIiwic3JjL2FwcC9wYWdlcy9jb21wYW55L2NvbXBhbnkucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBRUksbUNBQUE7RUFDQSwwQkFBQTtFQUNBLHNCQUFBO0VBQ0EsMEJBQUE7QUNBSiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NvbXBhbnkvY29tcGFueS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tc2VsZWN0IHtcclxuXHJcbiAgICAtLXBsYWNlaG9sZGVyLW9wYWNpdHk6IDEgIWltcG9ydGFudDtcclxuICAgIG1heC13aWR0aDogMTAwJSAhaW1wb3J0YW50O1xyXG4gICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcclxuICAgIHBhZGRpbmctbGVmdDogMCAhaW1wb3J0YW50O1xyXG4gICAgIH1cclxuICAgICAiLCJpb24tc2VsZWN0IHtcbiAgLS1wbGFjZWhvbGRlci1vcGFjaXR5OiAxICFpbXBvcnRhbnQ7XG4gIG1heC13aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICBwYWRkaW5nLWxlZnQ6IDAgIWltcG9ydGFudDtcbn0iXX0= */\";","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../../services/api.service';\nimport { Router} from '@angular/router';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { BusyService } from '../../services/busy.service';\nimport { MapComponent } from '../../components/map/map.component';\nimport { ModalController } from '@ionic/angular';\nimport { AutoprovinceService } from '../../services/autoprovince.service';\n@Component({\n  selector: 'app-company',\n  templateUrl: './company.page.html',\n  styleUrls: ['./company.page.scss'],\n})\nexport class CompanyPage implements OnInit {\n\n \n  errorMessage: string = '';\n  successMessage: string = '';\n  form : FormGroup;\n  working:boolean=false;\n  items:any=[];\n  provinceId:number=0;\n  provinceName:string=\"\";\n  constructor(public autoprovinceService:AutoprovinceService, public modalController: ModalController,private router:Router,private apiService:ApiService,\n    private formBuilder: FormBuilder,private busyService:BusyService) { \n      this.form = this.formBuilder.group({\n        email: ['' , \n        Validators.compose([\n          Validators.minLength(6),\n          Validators.required,Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\")\n        ])      \n      ],\n        password: ['', Validators.compose([\n          Validators.minLength(6),\n          Validators.required\n        ])],\n        confirm: ['',[Validators.required]],\n        name: [''],\n        phone: [''],\n        ubication: [''],\n        provinceName: [''],\n        categoriesid: [[],[Validators.required]],\n        hasDelivery: new FormControl(false),\n        lat: [''],\n        lng: [''],\n      },);\n    }\n    async presentMap() {\n      const modal = await this.modalController.create({\n      component: MapComponent\n     });\n      modal.onDidDismiss().then(async(res)=>{\n         if(res.data){\n          this.form.get(\"ubication\").setValue(res.data.dir);\n          this.form.get(\"lat\").setValue(res.data.lat);\n          this.form.get(\"lng\").setValue(res.data.lng);\n         }\n       });\n     return await modal.present();\n     }\n  ngOnInit() {\n  \n  }\n  selectedItem(value){\n    this.provinceId=value.id;\n   }\n  itemRemoved(event)\n  {\n  this.provinceId=0;\n  }\n  ionViewWillEnter(){\n    this.working=true;\n    this.apiService.Get(\"Categories\").then(res=>{\n      this.items=res;\n      this.working=false;\n    },err=>{\n      this.working=false;\n    });\n  }\n  async focus(){\n    let res= await  this.busyService.AceptInfo(\"¡Información!\",\"Recuerda activar la Ubicación\");\n    if(res)\n    {\n      await this.presentMap();\n    }\n  }\n  async tryRegister(form){\n   \n    if(form.confirm!=form.password)\n    {\n      await  this.busyService.presentAlert(\"¡Información!\",\"La clave y confirmar clave no son iguales\");\n      return;\n    } \n    this.working=true;\n    form.provinceId=this.provinceId;\n    this.apiService.Post(form,\"Companies\")\n     .then(res => {\n      this.working=false;\n       this.errorMessage = \"\";     \n        this.busyService.presentAlert(\"¡Información!\",\"Registro creado exitosamente\");\n       this.router.navigate(['/login']);\n     }, err => {\n      this.working=false;\n       this.errorMessage = err.message;\n         this.busyService.presentAlert(\"¡Información!\",\"No fue posible crear la cuenta\");\n     });\n  }\n}\n\n"]}