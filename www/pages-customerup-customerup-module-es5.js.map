{"version":3,"sources":["webpack:///src/app/pages/customerup/customerup.page.html","webpack:///src/app/pages/customerup/customerup-routing.module.ts","webpack:///src/app/pages/customerup/customerup.module.ts","webpack:///src/app/pages/customerup/customerup.page.scss","webpack:///src/app/pages/customerup/customerup.page.ts"],"names":["routes","path","component","CustomerupPageRoutingModule","imports","forChild","exports","CustomerupPageModule","declarations","CustomerupPage","router","apiService","formBuilder","busyService","errorMessage","successMessage","form","group","email","required","id","userId","name","phone","fijo","userinfo","JSON","parse","window","localStorage","getItem","getdata","working","Get","then","res","get","setValue","err","message","presentAlert","Put","selector","template"],"mappings":";;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,QAAMA,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE;AAFb,KADqB,CAAvB;;AAWA,QAAaC,2BAA2B;AAAA;AAAA,KAAxC;;AAAaA,+BAA2B,6DAJvC,+DAAS;AACRC,aAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,aAAO,EAAE,CAAC,4DAAD;AAFD,KAAT,CAIuC,GAA3BH,2BAA2B,CAA3B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACIb,QAAaI,oBAAoB;AAAA;AAAA,KAAjC;;AAAaA,wBAAoB,6DAVhC,+DAAS;AACRH,aAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,kEAHO,EAIP,0DAJO,EAKP,sFALO,CADD;AAQRI,kBAAY,EAAE,CAAC,+DAAD;AARN,KAAT,CAUgC,GAApBD,oBAAoB,CAApB;;;;;;;;ACpBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACWf,QAAaE,cAAc;AAOzB,8BAAoBC,MAApB,EAA0CC,UAA1C,EACUC,WADV,EAC2CC,WAD3C,EACoE;AAAA;;AADhD,aAAAH,MAAA,GAAAA,MAAA;AAAsB,aAAAC,UAAA,GAAAA,UAAA;AAChC,aAAAC,WAAA,GAAAA,WAAA;AAAiC,aAAAC,WAAA,GAAAA,WAAA;AAN3C,aAAAC,YAAA,GAAuB,EAAvB;AACA,aAAAC,cAAA,GAAyB,EAAzB;AAMI,aAAKC,IAAL,GAAY,KAAKJ,WAAL,CAAiBK,KAAjB,CAAuB;AACjCC,eAAK,EAAE,CAAC,EAAD,EAAM,CAAC,0DAAWC,QAAZ,CAAN,CAD0B;AAEjCC,YAAE,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWD,QAAZ,CAAL,CAF6B;AAGjCE,gBAAM,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWF,QAAZ,CAAL,CAHyB;AAIjCG,cAAI,EAAE,CAAC,EAAD,EAAK;AACTH,oBAAQ,EAAE;AADD,WAAL,CAJ2B;AAOjCI,eAAK,EAAE,CAAC,EAAD,CAP0B;AAQjCC,cAAI,EAAE,CAAC,EAAD;AAR2B,SAAvB,CAAZ;AAUD;;AAnBsB;AAAA;AAAA,eAqBzB,oBAAW,CAEV;AAvBwB;AAAA;AAAA,eAyBzB,4BAAgB;AACd,eAAKC,QAAL,GAAeC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,UAA5B,CAAX,CAAf;AACA,eAAKC,OAAL;AACD;AA5BwB;AAAA;AAAA,eA6BzB,mBAAO;AAAA;;AACL,eAAKC,OAAL,GAAa,IAAb;AACA,eAAKrB,UAAL,CAAgBsB,GAAhB,CAAoB,4BAA0B,KAAKR,QAAL,CAAcL,EAA5D,EAAiEc,IAAjE,CAAsE,UAAAC,GAAG,EAAE;AACzE,iBAAI,CAACH,OAAL,GAAa,KAAb;;AACC,iBAAI,CAAChB,IAAL,CAAUoB,GAAV,CAAc,OAAd,EAAuBC,QAAvB,CAAgCF,GAAG,CAACjB,KAApC;;AACA,iBAAI,CAACF,IAAL,CAAUoB,GAAV,CAAc,MAAd,EAAsBC,QAAtB,CAA+BF,GAAG,CAACb,IAAnC;;AACA,iBAAI,CAACN,IAAL,CAAUoB,GAAV,CAAc,OAAd,EAAuBC,QAAvB,CAAgCF,GAAG,CAACZ,KAApC;;AACA,iBAAI,CAACP,IAAL,CAAUoB,GAAV,CAAc,MAAd,EAAsBC,QAAtB,CAA+BF,GAAG,CAACX,IAAnC;;AACA,iBAAI,CAACR,IAAL,CAAUoB,GAAV,CAAc,QAAd,EAAwBC,QAAxB,CAAiCF,GAAG,CAACd,MAArC;;AACA,iBAAI,CAACL,IAAL,CAAUoB,GAAV,CAAc,IAAd,EAAoBC,QAApB,CAA6BF,GAAG,CAACf,EAAjC;AACF,WARD,EAQG,UAAAkB,GAAG,EAAI;AACR,iBAAI,CAACN,OAAL,GAAa,KAAb;AACC,iBAAI,CAAClB,YAAL,GAAoBwB,GAAG,CAACC,OAAxB;;AACE,iBAAI,CAAC1B,WAAL,CAAiB2B,YAAjB,CAA8B,eAA9B,EAA8C,6CAA9C;AACH,WAZF;AAaD;AA5CwB;AAAA;AAAA,eA6CnB,qBAAYxB,IAAZ,EAAgB;;;;;;;;AAEpB,yBAAKgB,OAAL,GAAa,IAAb;AACA,yBAAKrB,UAAL,CAAgB8B,GAAhB,CAAoBzB,IAApB,EAAyB,eAAeA,IAAI,CAACI,EAA7C,EACEc,IADF,CACO,UAAAC,GAAG,EAAI;AACZ,4BAAI,CAACH,OAAL,GAAa,KAAb;AACC,4BAAI,CAAClB,YAAL,GAAoB,EAApB;;AACC,4BAAI,CAACD,WAAL,CAAiB2B,YAAjB,CAA8B,eAA9B,EAA8C,iCAA9C;;AACA,4BAAI,CAACT,OAAL;AACF,qBANF,EAMI,UAAAO,GAAG,EAAI;AACT,4BAAI,CAACN,OAAL,GAAa,KAAb;AACC,4BAAI,CAAClB,YAAL,GAAoBwB,GAAG,CAACC,OAAxB;;AACE,4BAAI,CAAC1B,WAAL,CAAiB2B,YAAjB,CAA8B,eAA9B,EAA8C,gCAA9C;AACH,qBAVF;;;;;;;;;AAWD;AA3DwB;;AAAA;AAAA,OAA3B;;;;cAO6B;;cAA0B;;cAC9B;;cAAgC;;;;AAR5C/B,kBAAc,6DAL1B,gEAAU;AACTiC,cAAQ,EAAE,gBADD;AAETC,cAAQ,EAAR;AAAA;AAAA,0GAFS;;;;AAAA,KAAV,CAK0B,GAAdlC,cAAc,CAAd","file":"pages-customerup-customerup-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar color=\\\"secondary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title class=\\\"ion-text-center\\\">Mi Cuenta</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content  id=\\\"signup\\\" fullscreen  class=\\\"backgeneral\\\">\\r\\n  <div class=\\\"section_two ion-padding\\\">\\r\\n  <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"tryRegister(form.value)\\\">\\r\\n    <ion-progress-bar *ngIf=\\\"working\\\" color=\\\"secondary\\\" type=\\\"indeterminate\\\"></ion-progress-bar>\\r\\n    <input type=\\\"hidden\\\" formControlName=\\\"id\\\">\\r\\n    <input type=\\\"hidden\\\" formControlName=\\\"userId\\\">\\r\\n         <ion-item class=\\\"itemcolor1\\\">\\r\\n            <ion-input formControlName=\\\"name\\\" type=\\\"text\\\" placeholder=\\\"Nombres\\\"  required></ion-input>\\r\\n          </ion-item>\\r\\n\\r\\n          <ion-item class=\\\"itemcolor1\\\">\\r\\n            <ion-input formControlName=\\\"phone\\\"  type=\\\"text\\\" placeholder=\\\"Teléfono\\\"  required></ion-input>\\r\\n          </ion-item>\\r\\n\\r\\n          <ion-item class=\\\"itemcolor1\\\">\\r\\n            <ion-icon name=\\\"call-outline\\\"></ion-icon>\\r\\n            <ion-input formControlName=\\\"fijo\\\"  type=\\\"text\\\" placeholder=\\\"Teléfono fijo\\\"  required></ion-input>\\r\\n          </ion-item>\\r\\n              \\r\\n            <ion-item class=\\\"itemcolor1\\\">\\r\\n              <ion-input formControlName=\\\"email\\\" readonly=\\\"readonly\\\" type=\\\"text\\\" placeholder=\\\"Correo\\\"  required></ion-input>\\r\\n            </ion-item> \\r\\n\\r\\n          <div class=\\\"buttons ion-padding-top\\\">\\r\\n            <ion-button expand=\\\"block\\\" color=\\\"secondary\\\"  shape=\\\"round\\\" type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\" >Actualizar</ion-button>\\r\\n          </div>\\r\\n  </form>\\r\\n</div>\\r\\n</ion-content>\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { CustomerupPage } from './customerup.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CustomerupPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class CustomerupPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { CustomerupPageRoutingModule } from './customerup-routing.module';\r\n\r\nimport { CustomerupPage } from './customerup.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    IonicModule,\r\n    CustomerupPageRoutingModule\r\n  ],\r\n  declarations: [CustomerupPage]\r\n})\r\nexport class CustomerupPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2N1c3RvbWVydXAvY3VzdG9tZXJ1cC5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from '../../services/api.service';\r\nimport { Router} from '@angular/router';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { BusyService } from '../../services/busy.service';\r\n\r\n@Component({\r\n  selector: 'app-customerup',\r\n  templateUrl: './customerup.page.html',\r\n  styleUrls: ['./customerup.page.scss'],\r\n})\r\nexport class CustomerupPage implements OnInit {\r\n\r\n  errorMessage: string = '';\r\n  successMessage: string = '';\r\n  form : FormGroup;\r\n  working:boolean;\r\n  userinfo:any;\r\n  constructor(private router:Router,private apiService:ApiService,\r\n    private formBuilder: FormBuilder,private busyService:BusyService) { \r\n      this.form = this.formBuilder.group({\r\n        email: ['' , [Validators.required]],\r\n        id: ['', [Validators.required]],\r\n        userId: ['', [Validators.required]],\r\n        name: ['', { \r\n          required: false,\r\n        }],\r\n        phone: [''],\r\n        fijo: [''],\r\n      },);\r\n    }\r\n\r\n  ngOnInit() {\r\n   \r\n  }\r\n  \r\n  ionViewWillEnter(){\r\n    this.userinfo= JSON.parse(window.localStorage.getItem(\"userinfo\"));\r\n    this.getdata();\r\n  }\r\n  getdata(){\r\n    this.working=true;\r\n    this.apiService.Get(\"Customers/CustomerUser/\"+this.userinfo.id ).then(res=>{\r\n      this.working=false;\r\n       this.form.get(\"email\").setValue(res.email);\r\n       this.form.get(\"name\").setValue(res.name);\r\n       this.form.get(\"phone\").setValue(res.phone);\r\n       this.form.get(\"fijo\").setValue(res.fijo);\r\n       this.form.get(\"userId\").setValue(res.userId);\r\n       this.form.get(\"id\").setValue(res.id);  \r\n    }, err => {\r\n      this.working=false;\r\n       this.errorMessage = err.message;\r\n         this.busyService.presentAlert(\"¡Información!\",\"Error al consultar información de su cuenta\");\r\n     });\r\n  }\r\n  async tryRegister(form){\r\n   \r\n    this.working=true;\r\n    this.apiService.Put(form,\"Customers/\" + form.id)\r\n     .then(res => {\r\n      this.working=false;\r\n       this.errorMessage = \"\";     \r\n        this.busyService.presentAlert(\"¡Información!\",\"Cuenta Actualizada Exitosamente\");\r\n        this.getdata();\r\n     }, err => {\r\n      this.working=false;\r\n       this.errorMessage = err.message;\r\n         this.busyService.presentAlert(\"¡Información!\",\"No fue posible crear la cuenta\");\r\n     })\r\n  }\r\n\r\n}\r\n"]}