{"version":3,"sources":["webpack:///src/app/pages/customer/customer.page.html","webpack:///src/app/pages/customer/customer-routing.module.ts","webpack:///src/app/pages/customer/customer.module.ts","webpack:///src/app/pages/customer/customer.page.scss","webpack:///src/app/pages/customer/customer.page.ts"],"names":["routes","path","component","CustomerPageRoutingModule","imports","forChild","exports","CustomerPageModule","declarations","CustomerPage","router","apiService","formBuilder","busyService","errorMessage","successMessage","form","group","email","required","password","confirm","name","phone","presentAlert","working","Post","then","res","navigate","err","message","selector","template"],"mappings":"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","file":"pages-customer-customer-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"secondary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title class=\\\"ion-text-center\\\">\\n      <p style=\\\"color: white; font-size: 16px; font-weight: bold;\\\" >CREAR CUENTA - PERSONA</p>      \\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content  id=\\\"signup\\\" fullscreen  class=\\\"backgeneral\\\">\\n  <div class=\\\"section_two ion-padding\\\">\\n  <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"tryRegister(form.value)\\\">\\n    <ion-progress-bar *ngIf=\\\"working\\\" color=\\\"secondary\\\" type=\\\"indeterminate\\\"></ion-progress-bar>    \\n    <ion-row class=\\\"ion-align-items-center\\\">\\n      <ion-col size=\\\"12\\\" class=\\\"ion-text-center\\\">\\n        <p style=\\\"color: yellow; font-size: 12px; font-weight: lighter;\\\" >Ingresa la siguiente Información</p>\\n      </ion-col>\\n    </ion-row>  \\n    <ion-row class=\\\"ion-align-items-center\\\">\\n      <ion-col size=\\\"12\\\">\\n        <hr style=\\\"background-color: white;\\\">\\n      </ion-col>\\n    </ion-row>    \\n         <ion-item class=\\\"itemcolor1\\\">\\n            <ion-input formControlName=\\\"name\\\" type=\\\"text\\\" placeholder=\\\"Nombres y Apellidos\\\"  required></ion-input>\\n          </ion-item>\\n\\n          <ion-item class=\\\"itemcolor1\\\">\\n            <ion-input formControlName=\\\"phone\\\"  type=\\\"text\\\" placeholder=\\\"Número de Celular\\\"  required></ion-input>\\n          </ion-item>\\n              \\n            <ion-item class=\\\"itemcolor1\\\">\\n              <ion-input formControlName=\\\"email\\\" type=\\\"text\\\" placeholder=\\\"Correo Electrónico\\\"  required></ion-input>\\n            </ion-item> \\n              \\n            <ion-item class=\\\"itemcolor1\\\">\\n              <ion-input formControlName=\\\"password\\\" type=\\\"password\\\" placeholder=\\\"Clave - Mínimo 6 caracteres\\\"  required></ion-input>\\n            </ion-item>\\n\\n            <ion-item class=\\\"itemcolor1\\\">\\n              <ion-input formControlName=\\\"confirm\\\" type=\\\"password\\\" placeholder=\\\"Confirmar Clave\\\"  required></ion-input>\\n            </ion-item>  \\n\\n          <div class=\\\"buttons ion-padding-top\\\">\\n            <ion-button expand=\\\"block\\\" color=\\\"secondary\\\"  shape=\\\"round\\\" type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\" >Guardar Información</ion-button>\\n          </div>\\n  </form>\\n</div>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CustomerPage } from './customer.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CustomerPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CustomerPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule ,ReactiveFormsModule} from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CustomerPageRoutingModule } from './customer-routing.module';\n\nimport { CustomerPage } from './customer.page';\n\n@NgModule({\n  imports: [\n    ReactiveFormsModule,\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    CustomerPageRoutingModule\n  ],\n  declarations: [CustomerPage]\n})\nexport class CustomerPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2N1c3RvbWVyL2N1c3RvbWVyLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../../services/api.service';\nimport { Router} from '@angular/router';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { BusyService } from '../../services/busy.service';\n@Component({\n  selector: 'app-customer',\n  templateUrl: './customer.page.html',\n  styleUrls: ['./customer.page.scss'],\n})\nexport class CustomerPage implements OnInit {\n\n \n  errorMessage: string = '';\n  successMessage: string = '';\n  form : FormGroup;\n  working:boolean;\n  constructor(private router:Router,private apiService:ApiService,\n    private formBuilder: FormBuilder,private busyService:BusyService) { \n      this.form = this.formBuilder.group({\n        email: ['' , [Validators.required]],\n        password: ['', [Validators.required]],\n        confirm: ['',[Validators.required]],\n        name: ['', { \n          required: false,\n        }],\n        phone: [''],\n      },);\n    }\n\n  ngOnInit() {\n   \n  }\n  async tryRegister(form){\n   \n    if(form.confirm!=form.password)\n    {\n      await  this.busyService.presentAlert(\"¡Información!\",\"La clave y confirmar clave no son iguales\");\n      return;\n    } \n    this.working=true;\n    this.apiService.Post(form,\"Customers\")\n     .then(res => {\n      this.working=false;\n       this.errorMessage = \"\";     \n        this.busyService.presentAlert(\"¡Información!\",\"Registro creado exitosamente\");\n       this.router.navigate(['/login']);\n     }, err => {\n      this.working=false;\n       this.errorMessage = err.message;\n         this.busyService.presentAlert(\"¡Información!\",\"No fue posible crear la cuenta\");\n     })\n  }\n}\n"]}