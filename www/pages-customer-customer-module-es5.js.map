{"version":3,"sources":["webpack:///src/app/pages/customer/customer.page.html","webpack:///src/app/pages/customer/customer-routing.module.ts","webpack:///src/app/pages/customer/customer.module.ts","webpack:///src/app/pages/customer/customer.page.scss","webpack:///src/app/pages/customer/customer.page.ts"],"names":["routes","path","component","CustomerPageRoutingModule","imports","forChild","exports","CustomerPageModule","declarations","CustomerPage","router","apiService","formBuilder","busyService","errorMessage","successMessage","ms","form","group","email","required","password","confirm","name","phone","fijo","presentAlert","working","Post","then","res","navigate","err","message","JSON","stringify","error","Message","console","log","indexOf","selector","template"],"mappings":"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","file":"pages-customer-customer-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar color=\\\"secondary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title class=\\\"ion-text-center\\\">\\r\\n      <p style=\\\"color: white; font-size: 16px; font-weight: bold;\\\" >CREAR CUENTA - PERSONA</p>      \\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content  id=\\\"signup\\\" fullscreen  class=\\\"backgeneral\\\">\\r\\n\\r\\n  <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"tryRegister(form.value)\\\">\\r\\n    <ion-progress-bar *ngIf=\\\"working\\\" color=\\\"secondary\\\" type=\\\"indeterminate\\\"></ion-progress-bar>    \\r\\n    <ion-row class=\\\"ion-align-items-center\\\">\\r\\n      <ion-col size=\\\"12\\\" class=\\\"ion-text-center\\\">\\r\\n        <p style=\\\"color: yellow; font-size: 14px; font-weight: bold; font-family: Verdana, Geneva, Tahoma, sans-serif;\\\" >Ingresa la siguiente Información</p>\\r\\n        <hr style=\\\"background-color: white;\\\">\\r\\n      </ion-col>\\r\\n    </ion-row>    \\r\\n         <ion-item class=\\\"itemcolor1\\\">\\r\\n           <div class=\\\"divide\\\" id=\\\"lgpersona\\\"><ion-icon class=\\\"allicon\\\" name=\\\"person\\\" style=\\\"color: white;\\\"></ion-icon></div>\\r\\n            <ion-input formControlName=\\\"name\\\" type=\\\"text\\\" placeholder=\\\"Nombres y Apellidos (*)\\\"  required></ion-input>\\r\\n          </ion-item>\\r\\n          <ion-item class=\\\"itemcolor1\\\">\\r\\n            <div class=\\\"divide\\\" id=\\\"lgcorreo\\\"><ion-icon class=\\\"allicon\\\" name=\\\"mail-outline\\\" style=\\\"color:white\\\"></ion-icon></div>\\r\\n            <ion-input formControlName=\\\"email\\\" type=\\\"text\\\" placeholder=\\\"Correo Electrónico (*)\\\"  required></ion-input>\\r\\n          </ion-item>               \\r\\n          <ion-item class=\\\"itemcolor1\\\">\\r\\n            <div class=\\\"divide\\\" id=\\\"lgpassword\\\"><ion-icon class=\\\"allicon\\\" name=\\\"key\\\" style=\\\"color:white\\\"></ion-icon></div>\\r\\n            <ion-input formControlName=\\\"password\\\" type=\\\"password\\\" placeholder=\\\"Clave - Mínimo 6 caracteres (*)\\\"  required></ion-input>\\r\\n          </ion-item>\\r\\n          <ion-item class=\\\"itemcolor1\\\">\\r\\n            <div class=\\\"divide\\\" id=\\\"lgpassword\\\"><ion-icon class=\\\"allicon\\\" name=\\\"key\\\" style=\\\"color:white\\\"></ion-icon></div>\\r\\n            <ion-input formControlName=\\\"confirm\\\" type=\\\"password\\\" placeholder=\\\"Confirmar Clave (*)\\\"  required></ion-input>\\r\\n          </ion-item> \\r\\n\\r\\n          <ion-item class=\\\"itemcolor1\\\">\\r\\n            <div class=\\\"divide\\\" id=\\\"lgcelular\\\"><ion-icon class=\\\"allicon\\\" name=\\\"phone-portrait-outline\\\" style=\\\"color:white\\\"></ion-icon></div>\\r\\n            <ion-input formControlName=\\\"phone\\\"  type=\\\"text\\\" placeholder=\\\"N° Celular (*)\\\"  required></ion-input>\\r\\n          </ion-item>\\r\\n          <ion-item class=\\\"itemcolor1\\\">\\r\\n            <div class=\\\"divide\\\"><ion-icon class=\\\"allicon\\\" name=\\\"call-outline\\\" style=\\\"color:white\\\"></ion-icon></div>\\r\\n            <ion-input formControlName=\\\"fijo\\\"  type=\\\"text\\\" placeholder=\\\"N° Fijo\\\"  ></ion-input>\\r\\n          </ion-item>    \\r\\n          \\r\\n          <div class=\\\"buttons ion-padding-top\\\">\\r\\n            <ion-button expand=\\\"block\\\" color=\\\"secondary\\\"  shape=\\\"round\\\" type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\" >Guardar Información</ion-button>\\r\\n          </div>\\r\\n  </form>\\r\\n\\r\\n</ion-content>\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { CustomerPage } from './customer.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CustomerPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class CustomerPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule ,ReactiveFormsModule} from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { CustomerPageRoutingModule } from './customer-routing.module';\r\n\r\nimport { CustomerPage } from './customer.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    ReactiveFormsModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    CustomerPageRoutingModule\r\n  ],\r\n  declarations: [CustomerPage]\r\n})\r\nexport class CustomerPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2N1c3RvbWVyL2N1c3RvbWVyLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from '../../services/api.service';\r\nimport { Router} from '@angular/router';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { BusyService } from '../../services/busy.service';\r\n@Component({\r\n  selector: 'app-customer',\r\n  templateUrl: './customer.page.html',\r\n  styleUrls: ['./customer.page.scss'],\r\n})\r\nexport class CustomerPage implements OnInit {\r\n\r\n \r\n  errorMessage: string = '';\r\n  successMessage: string = '';\r\n  form : FormGroup;\r\n  working:boolean;\r\n  ms:any=null;\r\n  constructor(private router:Router,private apiService:ApiService,\r\n    private formBuilder: FormBuilder,private busyService:BusyService) { \r\n      this.form = this.formBuilder.group({\r\n        email: ['' , [Validators.required]],\r\n        password: ['', [Validators.required]],\r\n        confirm: ['',[Validators.required]],\r\n        name: ['', { \r\n          required: false,\r\n        }],\r\n        phone: [''],\r\n        fijo: [''],\r\n      },);\r\n    }\r\n\r\n  ngOnInit() {\r\n   \r\n  }\r\n  async tryRegister(form){\r\n   \r\n    if(form.confirm!=form.password)\r\n    {\r\n      await  this.busyService.presentAlert(\"¡Información!\",\"La clave y confirmar clave no son iguales\");\r\n      return;\r\n    } \r\n    this.working=true;\r\n    this.apiService.Post(form,\"Customers\")\r\n     .then(res => {\r\n      this.working=false;\r\n       this.errorMessage = \"\";     \r\n        this.busyService.presentAlert(\"¡Información!\",\"Registro creado exitosamente\");\r\n       this.router.navigate(['/login']);\r\n     }, err => {\r\n      this.working=false;\r\n      this.errorMessage = err.message;\r\n      this.ms = JSON.stringify(err.error.message.Message);   \r\n      console.log(\"VANCHO: \" + this.ms)   ;\r\n      if (this.ms.indexOf(\"EMAIL\")>0)\r\n      {\r\n       this.ms=\"La dirección de correo electrónico ya se encuentra registrada.\";\r\n      }\r\n      else{\r\n       if (this.ms.indexOf(\"PHONE\")>0)\r\n       {\r\n         this.ms=\"El número de Teléfono ya se encuentra registrado.\";\r\n       }\r\n       else\r\n       {\r\n         this.ms=\"No fue posible crear la cuenta.\";\r\n       }\r\n      }\r\n      this.busyService.presentAlert(\"¡Información!\",this.ms);\r\n    });\r\n     };\r\n  }\r\n     \r\n  \r\n\r\n"]}